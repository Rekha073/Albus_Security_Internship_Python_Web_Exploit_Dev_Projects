import requests
import re
import json
from bs4 import BeautifulSoup
from urllib.parse import urljoin, urlparse

# API formats to detect
api_formats = [
    r"api\.([a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)",  # e.g., api.example.com/v1/users
    r"([a-zA-Z0-9_-]+)\.api\.([a-zA-Z0-9_-]+)",  # e.g., example.api.com/v1/users
    r"api\/([a-zA-Z0-9_-]+)\/([a-zA-Z0-9_-]+)",  # e.g., example.com/api/v1/users
    r"([a-zA-Z0-9_-]+)\/api\/([a-zA-Z0-9_-]+)",  # e.g., example.com/users/api/v1
    r"graphql\/([a-zA-Z0-9_-]+)",  # e.g., example.com/graphql/users
    r"([a-zA-Z0-9_-]+)\/graphql",  # e.g., example.com/users/graphql
]

class APILeakDetector:
    def __init__(self, url):
        self.url = url
        self.api_leaks = []

    def extract_js_files(self, soup):
        js_files = []
        for script in soup.find_all("script", src=True):
            js_file = script["src"]
            if not js_file.startswith("http"):
                js_file = urljoin(self.url, js_file)
            js_files.append(js_file)
        return js_files

    def extract_api_calls(self, js_file):
        response = requests.get(js_file)
        if response.status_code == 200:
            js_code = response.text
            for api_format in api_formats:
                matches = re.findall(api_format, js_code)
                for match in matches:
                    api_leak = {"format": api_format, "match": match}
                    self.api_leaks.append(api_leak)

    def detect_api_leaks(self):
        response = requests.get(self.url)
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, "html.parser")
            js_files = self.extract_js_files(soup)
            for js_file in js_files:
                self.extract_api_calls(js_file)

    def print_api_leaks(self):
        if self.api_leaks:
            print("API Leaks detected:")
            for api_leak in self.api_leaks:
                print(f"  Format: {api_leak['format']}")
                print(f"  Match: {api_leak['match']}")
                print()
        else:
            print("No API Leaks detected.")

def main():
    url = input("Enter the URL to scan: ")
    detector = APILeakDetector(url)
    detector.detect_api_leaks()
    detector.print_api_leaks()

if __name__ == "__main__":
    main()